name: Performance Benchmarks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        
      - name: Run benchmarks
        run: |
          # Run benchmark and save output
          npm run benchmark | tee benchmark-results.txt
          
          # Check if any heap usage exceeds 5MB or if any operation takes longer than 1000ms
          if grep -E "Heap Used: [5-9][0-9]*\.[0-9]+ MB|Heap Used: [0-9]{2,}|Duration: [0-9]{4,}" benchmark-results.txt; then
            echo "⚠️ Performance regression detected! Memory usage or duration exceeds thresholds."
            exit 1
          fi
          
      - name: Store benchmark results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-node-${{ matrix.node-version }}
          path: benchmark-results.txt
          
      - name: Comment PR with Results
        if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('benchmark-results.txt', 'utf8');
            
            const comment = `## 📊 Performance Benchmark Results
            
            \`\`\`
            ${results}
            \`\`\`
            
            > Note: These benchmarks were run on Node.js ${{ matrix.node-version }}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: comment
            });
